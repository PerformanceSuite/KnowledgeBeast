---
# KnowledgeBeast API Service
# LoadBalancer service for external access with session affinity
apiVersion: v1
kind: Service
metadata:
  name: knowledgebeast-api
  namespace: knowledgebeast
  labels:
    app: knowledgebeast
    component: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "2"
spec:
  type: LoadBalancer
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800  # 3 hours

  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 443
      targetPort: http
      protocol: TCP
    - name: metrics
      port: 8001
      targetPort: metrics
      protocol: TCP

  selector:
    app: knowledgebeast
    component: api

  # Health check configuration
  healthCheckNodePort: 0
  externalTrafficPolicy: Local  # Preserve source IP

---
# KnowledgeBeast API Internal Service
# ClusterIP service for internal cluster communication
apiVersion: v1
kind: Service
metadata:
  name: knowledgebeast-api-internal
  namespace: knowledgebeast
  labels:
    app: knowledgebeast
    component: api
spec:
  type: ClusterIP
  clusterIP: None  # Headless service for direct pod access

  ports:
    - name: http
      port: 8000
      targetPort: http
      protocol: TCP
    - name: metrics
      port: 8001
      targetPort: metrics
      protocol: TCP

  selector:
    app: knowledgebeast
    component: api

---
# ChromaDB Service
# ClusterIP service for internal access only
apiVersion: v1
kind: Service
metadata:
  name: knowledgebeast-chromadb
  namespace: knowledgebeast
  labels:
    app: knowledgebeast
    component: chromadb
spec:
  type: ClusterIP

  ports:
    - name: http
      port: 8000
      targetPort: http
      protocol: TCP

  selector:
    app: knowledgebeast
    component: chromadb

---
# Redis Service
# ClusterIP service for internal caching
apiVersion: v1
kind: Service
metadata:
  name: knowledgebeast-redis
  namespace: knowledgebeast
  labels:
    app: knowledgebeast
    component: redis
spec:
  type: ClusterIP

  ports:
    - name: redis
      port: 6379
      targetPort: redis
      protocol: TCP

  selector:
    app: knowledgebeast
    component: redis

---
# Prometheus Service
# For metrics collection
apiVersion: v1
kind: Service
metadata:
  name: knowledgebeast-prometheus
  namespace: knowledgebeast
  labels:
    app: knowledgebeast
    component: prometheus
spec:
  type: ClusterIP

  ports:
    - name: http
      port: 9090
      targetPort: 9090
      protocol: TCP

  selector:
    app: prometheus
    component: server

---
# Grafana Service
# For metrics visualization
apiVersion: v1
kind: Service
metadata:
  name: knowledgebeast-grafana
  namespace: knowledgebeast
  labels:
    app: knowledgebeast
    component: grafana
spec:
  type: ClusterIP

  ports:
    - name: http
      port: 3000
      targetPort: 3000
      protocol: TCP

  selector:
    app: grafana
